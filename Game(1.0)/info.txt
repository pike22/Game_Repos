This upload is the first of many project saves that will go into Github.
The major content completed before this upload is properly working collision identification.


Every Friday I will be pushing adding a small summary of the last week of this projects progression.
This first summary is more of a general overview than just the last week being that this is the first of
many. If you want to run the code run the alpha.py file.


 -Overall Summary:
	This is a small High school project that I have decided to dedicate more time than probably necessary to do.
	Although I am doing this for fun with the benefits from an eventually finished product. The overall goal is to create some
	form of 2D game that is based around a dungeon crawler. This may change overtime. I have no name or story in mind yet.
	This is more due to being to early in game development. Daily updates to Github will be normal.
	- A summary of weekly events will continue to be added bellow as time moves forward.


 -09/17/2021 Weeks Summary
 	This weeks work only had some small changes. None of these changes are to be permanent for the most part due to that most
	was written in attempts to work out how to use the implemented collision. I figured that just shoving ideas into code wasn't
	going to work so I took some time outside of the code to put together an Idea for what to do. With some help from my teacher
	we came up with the idea to use Dictionaries. Something I haven't used since when I first reconstructed my classes.

 -09/24/2021 Weeks Summary
	This week I fully put together my Collision Dictionary(Col_Dict) that I had described in the last summary.
	After completing that I moved on to using that Dictionary to identify what I have colliding.
	The problem that I ran into was that this current method worked all fine and well with each class object only having one
	"entity" to work with. So once I added a second stalfos to the table. I began to run into problems. As I found out that I
	need more identification for. The biggest problem was that my keys that I used ended up pointing to one spot rather
	than to the different parts of the system that it should have. Other than this the early implementation that I
	have works.

		-I might want to consider instead of using lists in my stalfos parameters, I would create a new instance of the entire object with slight changes
			-Pros:  It may help with my recent problem (Having to constantly find and pass which stalfos in the list I wanted)
			-Cons:  It will most likely cause more problems that I otherwise wouldn't have, Difficult to manage a potentially large number of instances.


 -10/01/2021 Week Summary
   This week I looked over my previous code of stalfos_main and decided to use a different method to identify the
	different stalfos that I would have at once. So now instead of having one instance of the Stalfos_Main class
	full of lists to have the parameters. I now will call a new instance of the Stalfos_main class every
	time I need to have a new stalfos present. I am going to archive the previous main branch of this project then
	this branch will be the new main.
	(THIS IS THE LAST INSTANCE OF STALFOS_REWORK)


 -10/08/21 Week Summary
 	This week I finished working on separating the game time from the alpha.py file to its own file. I also began
	working on enhancing my knockback by creating a new function that uses math on the grid plane to determine
	where the objects that are colliding are at. This allows me to then when using the knockback function have them
	be knocked back in the opposite direction they were hit from. This is still being worked on in the next week and
	will be talked about again next entry.


 -10/15/21 Week Summary
 	This Week I quickly put together saving the last direction my player moved. This allowed me to change which direction
	my sword rendered to, I was also able to create the basic direction for knockback. So if player comes in from the top
	the knockback sends the player back the same way. The same for the other 3 directions. As of Wednesday I began work on
	creating a bow & arrow. I was able to implement the bow itself with no problem. It was practically a strait copy past of
	the swords logic. Some will need to be edited but for now it works. The hard part right now is the arrow. I began by trying
	to use some of the sword logic again but that has caused some problems. So I just hit ctrl-A and then the del key. To
	attempt to write it again. The other thing to do is to use inheritance to help. That will also help for future projectiles.
